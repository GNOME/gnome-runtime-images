image: quay.io/buildah/stable:v1.26

# Buildah can't use 'overlay' driver when running inside docker
variables:
    STORAGE_DRIVER: 'vfs'
    BUILDAH_FORMAT: 'docker'
    BUILDAH_ISOLATION: 'chroot'

stages:
    - base
    - runtimes
    - bundles

default:
    before_script:
        - buildah login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    interruptible: true
    retry: 1

# Expects ${DOCKERIMAGE} which should be the name+tag of the registry image.
# Expects ${DOCKERFILE} variable which should be the path to the Dockerfile.
.dockerfile_template:
    script:
        # For debugging
        - echo ${DOCKERFILE} / ${DOCKERIMAGE}

        - buildah bud -f ${DOCKERFILE} -t ${DOCKERIMAGE} .
        # push only on master branch
        - |
          buildah push ${DOCKERIMAGE}

          # Tag `x86_64` also without the ARCH to not break the old path
          buildah tag $DOCKERIMAGE $DOCKERIMAGE_OLD
          buildah push $DOCKERIMAGE_OLD
    after_script:
        # don't try to use systemd/journald
        - |
          cat >> /etc/containers/libpod.conf << END
          cgroup_manager = "cgroupfs"
          events_logger = "file"
          END
        # - podman run --rm ${DOCKERIMAGE} flatpak list --columns=application,branch,arch,active,size
        - buildah inspect --format "{{.FromImageID}}" ${DOCKERIMAGE}
    rules:
      - when: 'manual'
        allow_failure: true

base:
    stage: base
    extends: ['.dockerfile_template', '.vars_x86_64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/${ARCH}/base
        DOCKERIMAGE_OLD: ${CI_REGISTRY_IMAGE}/base
        DOCKERFILE: base

base:aarch64:
    stage: base
    extends: ['.dockerfile_template', '.vars_aarch64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/${ARCH}/base
        DOCKERFILE: base

flat-manager-client:
    stage: base
    extends: ['.dockerfile_template', '.vars_x86_64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/${ARCH}/flat-manager-client
        DOCKERIMAGE_OLD: ${CI_REGISTRY_IMAGE}/flat-manager-client
        DOCKERFILE: flat-manager-client/Dockerfile

flat-manager-client:aarch64:
    stage: base
    extends: ['.dockerfile_template', '.vars_aarch64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/${ARCH}/flat-manager-client
        DOCKERFILE: flat-manager-client/Dockerfile

# Expects ${BRANCH} and ${FD_BRANCH} variables which are the gnome branch and the freedesktop-sdk
# branch it is based on
.sdk_template:
    needs: []
    script:
        # build the flatpak sdk image
        - |
          CONTAINER=$(buildah from ${CI_REGISTRY_IMAGE}/${ARCH}/base)

          export TAG="${CI_REGISTRY_IMAGE}/${ARCH}/gnome:${BRANCH}"
          echo "Building $TAG"

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.gnome.Sdk//${BRANCH} org.gnome.Platform//${BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.rust-stable//${FD_BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.llvm${LLVM_VERSION}//${FD_BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.llvm${LLVM_VERSION_2}//${FD_BRANCH}

          echo "Commiting $TAG"
          buildah commit $CONTAINER $TAG

        # push only on master branch
        - |
          echo "Pushing $TAG"
          buildah push $TAG

          # This is for backwards compatibility
          if [ $ARCH == "x86_64" ]; then
              # Tag `x86_64` also without the ARCH to not break the old path
              export TAG_OLD="${CI_REGISTRY_IMAGE}/gnome:${BRANCH}"
              buildah tag $TAG $TAG_OLD
              buildah push $TAG_OLD
          fi

.vars_aarch64:
  tags:
    - aarch64
  variables:
    ARCH: aarch64

.vars_x86_64:
  tags:
    - x86_64
    - crun
  variables:
    ARCH: x86_64

.vars_nightly:
  variables:
    BRANCH: master
    FD_BRANCH: "22.08beta"
    LLVM_VERSION: "14"
    LLVM_VERSION_2: "14"
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
      when: 'always'
    - if: "$CI_COMMIT_BRANCH == 'master'"
      when: 'always'
    - when: 'manual'
      allow_failure: true

.vars_41:
  variables:
    BRANCH: "41"
    FD_BRANCH: "21.08"
    LLVM_VERSION: "12"
    LLVM_VERSION_2: "13"
  rules:
    - if: '$REBUILD_STABLE'
      when: 'always'
    - when: 'manual'
      allow_failure: true

.vars_42:
  variables:
    BRANCH: "42"
    FD_BRANCH: "21.08"
    LLVM_VERSION: "12"
    LLVM_VERSION_2: "13"
  rules:
    - if: '$REBUILD_STABLE'
      when: 'always'
    - when: 'manual'
      allow_failure: true

gnome:nightly:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_nightly', '.vars_x86_64']

gnome:41:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_41', '.vars_x86_64']

gnome:42:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_42', '.vars_x86_64']

gnome:aarch64:nightly:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_nightly', '.vars_aarch64']

gnome:aarch64:42:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_42', '.vars_aarch64']
