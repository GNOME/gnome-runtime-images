image: quay.io/buildah/stable:v1.26

workflow:
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH'

# Buildah can't use 'overlay' driver when running inside docker
variables:
    STORAGE_DRIVER: 'vfs'
    BUILDAH_FORMAT: 'docker'
    BUILDAH_ISOLATION: 'chroot'
    CI_REGISTRY_IMAGE: quay.io/gnome_infrastructure/gnome-runtime-images

stages:
    - base
    - runtimes
    - bundles
    - manifests

default:
    before_script:
        - buildah login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    interruptible: true
    retry: 1

# Expects ${DOCKERIMAGE} which should be the name+tag of the registry image.
# Expects ${DOCKERFILE} variable which should be the path to the Dockerfile.
.dockerfile_template:
    script:
        # For debugging
        - echo ${DOCKERFILE} / ${DOCKERIMAGE}

        - buildah bud -f ${DOCKERFILE} -t ${DOCKERIMAGE} .
        # push only on master branch
        - |
          if [ $CI_COMMIT_REF_NAME == master ]; then
              buildah login -u ${OCI_REGISTRY_USER} -p ${OCI_REGISTRY_PASSWORD} quay.io
              buildah push ${DOCKERIMAGE}
          fi
    after_script:
        # don't try to use systemd/journald
        - |
          cat >> /etc/containers/libpod.conf << END
          cgroup_manager = "cgroupfs"
          events_logger = "file"
          END
        # - podman run --rm ${DOCKERIMAGE} flatpak list --columns=application,branch,arch,active,size
        - buildah inspect --format "{{.FromImageID}}" ${DOCKERIMAGE}
    rules:
      - when: 'manual'
        allow_failure: true

# Expects ${REGISTRY_TAG} which should be the name+tag of the manifest ref
.manifest:
  stage: 'manifests'
  script:
    - |
      buildah manifest create ${REGISTRY_TAG}

      buildah manifest add ${REGISTRY_TAG} docker://${CI_REGISTRY_IMAGE}:x86_64-${REGISTRY_TAG};
      buildah manifest add ${REGISTRY_TAG} docker://${CI_REGISTRY_IMAGE}:aarch64-${REGISTRY_TAG};

      buildah login -u ${OCI_REGISTRY_USER} -p ${OCI_REGISTRY_PASSWORD} quay.io
      buildah manifest push --all ${REGISTRY_TAG} docker://${CI_REGISTRY_IMAGE}:${REGISTRY_TAG}

base:
    stage: base
    extends: ['.dockerfile_template', '.vars_x86_64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/${ARCH}-base
        DOCKERFILE: Dockerfile

base:aarch64:
    stage: base
    extends: ['.dockerfile_template', '.vars_aarch64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}:${ARCH}-base
        DOCKERFILE: Dockerfile

base-manifest:
  extends: ['.manifest']
  variables:
    REGISTRY_TAG: 'base'
  needs:
    - base
    - base:aarch64

flat-manager-client:
    stage: base
    extends: ['.dockerfile_template', '.vars_x86_64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}:${ARCH}-flat-manager-client
        DOCKERFILE: flat-manager-client/Dockerfile

flat-manager-client:aarch64:
    stage: base
    extends: ['.dockerfile_template', '.vars_aarch64']
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}:${ARCH}-flat-manager-client
        DOCKERFILE: flat-manager-client/Dockerfile

flat-manager-client-manifest:
  extends: ['.manifest']
  variables:
    REGISTRY_TAG: 'flat-manager-client'
  needs:
    - flat-manager-client
    - flat-manager-client:aarch64

# Expects ${BRANCH} and ${FD_BRANCH} variables which are the gnome branch and the freedesktop-sdk
# branch it is based on
.sdk_template:
    needs: []
    script:
        # build the flatpak sdk image
        - |
          CONTAINER=$(buildah from ${CI_REGISTRY_IMAGE}:base)

          export TAG="${CI_REGISTRY_IMAGE}:${ARCH}-gnome-${BRANCH}"
          echo "Building $TAG"

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.gnome.Sdk//${BRANCH} org.gnome.Platform//${BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.rust-stable//${FD_BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.llvm${LLVM_VERSION}//${FD_BRANCH}

          buildah run $CONTAINER flatpak install --user --noninteractive \
                    org.freedesktop.Sdk.Extension.llvm${LLVM_VERSION_2}//${FD_BRANCH}

          echo "Commiting $TAG"
          buildah commit $CONTAINER $TAG

        # push only on master branch
        - |
          if [ $CI_COMMIT_REF_NAME == master ]; then
              echo "Pushing $TAG"
              buildah push $TAG
          fi

.vars_aarch64:
  tags:
    - aarch64
  variables:
    ARCH: aarch64

.vars_x86_64:
  tags:
    - x86_64
  variables:
    ARCH: x86_64

.vars_nightly:
  variables:
    BRANCH: master
    REGISTRY_TAG: 'gnome-master'
    FD_BRANCH: "22.08beta"
    LLVM_VERSION: "14"
    LLVM_VERSION_2: "14"
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
      when: 'always'
    - if: "$CI_COMMIT_BRANCH == 'master'"
      when: 'always'
    - when: 'manual'
      allow_failure: true

.vars_41:
  variables:
    BRANCH: "41"
    REGISTRY_TAG: 'gnome-41'
    FD_BRANCH: "21.08"
    LLVM_VERSION: "12"
    LLVM_VERSION_2: "13"
  rules:
    - if: '$REBUILD_STABLE'
      when: 'always'
    - when: 'manual'
      allow_failure: true

.vars_42:
  variables:
    BRANCH: "42"
    REGISTRY_TAG: 'gnome-42'
    FD_BRANCH: "21.08"
    LLVM_VERSION: "12"
    LLVM_VERSION_2: "13"
  rules:
    - if: '$REBUILD_STABLE'
      when: 'always'
    - when: 'manual'
      allow_failure: true

gnome:nightly:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_nightly', '.vars_x86_64']

gnome:41:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_41', '.vars_x86_64']

gnome:42:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_42', '.vars_x86_64']

gnome:aarch64:nightly:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_nightly', '.vars_aarch64']

gnome:aarch64:42:
  stage: 'runtimes'
  extends: ['.sdk_template', '.vars_42', '.vars_aarch64']

gnome-manifest:nightly:
  extends: ['.manifest', '.vars_nightly']
  needs:
    - gnome:nightly
    - gnome:aarch64:nightly

gnome-manifest:42:
  extends: ['.manifest', '.vars_42']
  needs:
    - gnome:42
    - gnome:aarch64:42
