image: docker:latest
services:
    - docker:dind

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
    DOCKER_DRIVER: overlay2

stages:
    - base
    - runtimes
    - rust_bundle

# Expects ${DOCKERIMAGE} which should be the name+tag of the registry image.
# Expects ${DOCKERFILE} variable which should be the path to the Dockerfile.
.build_template:
    script:
        # For debugging
        - echo ${DOCKERFILE} / ${DOCKERIMAGE}
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
        - docker build --pull -f ${DOCKERFILE} -t ${DOCKERIMAGE} .
        - docker push ${DOCKERIMAGE}
    after_script:
        - docker run --rm ${DOCKERIMAGE} flatpak list --columns=application,branch,arch,active,size
        - docker image inspect --format "{{json .Id}}" ${DOCKERIMAGE}
    only:
        - master
        - triggers
        - schedules
    retry: 1

base:
    stage: base
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/base
        DOCKERFILE: base

flat-manager-client:
    stage: base
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/flat-manager-client
        DOCKERFILE: flat-manager-client/Dockerfile

gnome:master:
    stage: runtimes
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/gnome:master
        DOCKERFILE: gnome-master/Dockerfile

gnome:3.26:
    stage: runtimes
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/gnome:3.26
        DOCKERFILE: gnome-3-26/Dockerfile

gnome:3.28:
    stage: runtimes
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/gnome:3.28
        DOCKERFILE: gnome-3-28/Dockerfile

gnome:3.30:
    stage: runtimes
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/gnome:3.30
        DOCKERFILE: gnome-3-30/Dockerfile

gnome:3.32:
    stage: runtimes
    extends: .build_template
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/gnome:3.32
        DOCKERFILE: gnome-3-32/Dockerfile

rust master:
    stage: rust_bundle
    extends: .build_template
    before_script:
        - export BASE_IMAGE="registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:master"
        - export BRANCH="19.08beta"
        - sed -e "s|@BASE_IMAGE@|$BASE_IMAGE|" sdk-bundles/rust-bundle.template > sdk-bundles/rust
        - sed -i "s|@BRANCH@|$BRANCH|" sdk-bundles/rust
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/rust_bundle:master
        DOCKERFILE: sdk-bundles/rust

rust 3.28:
    stage: rust_bundle
    extends: .build_template
    before_script:
        - export BASE_IMAGE="registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.28"
        - export BRANCH="1.6"
        - sed -e "s|@BASE_IMAGE@|$BASE_IMAGE|" sdk-bundles/rust-bundle.template > sdk-bundles/rust
        - sed -i "s|@BRANCH@|$BRANCH|" sdk-bundles/rust
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/rust_bundle:3.28
        DOCKERFILE: sdk-bundles/rust

rust 3.30:
    stage: rust_bundle
    extends: .build_template
    before_script:
        - export BASE_IMAGE="registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.30"
        - export BRANCH="18.08"
        - sed -e "s|@BASE_IMAGE@|$BASE_IMAGE|" sdk-bundles/rust-bundle.template > sdk-bundles/rust
        - sed -i "s|@BRANCH@|$BRANCH|" sdk-bundles/rust
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/rust_bundle:3.30
        DOCKERFILE: sdk-bundles/rust

rust 3.32:
    stage: rust_bundle
    extends: .build_template
    before_script:
        - export BASE_IMAGE="registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.32"
        - export BRANCH="18.08"
        - sed -e "s|@BASE_IMAGE@|$BASE_IMAGE|" sdk-bundles/rust-bundle.template > sdk-bundles/rust
        - sed -i "s|@BRANCH@|$BRANCH|" sdk-bundles/rust
    variables:
        DOCKERIMAGE: ${CI_REGISTRY_IMAGE}/rust_bundle:3.32
        DOCKERFILE: sdk-bundles/rust
